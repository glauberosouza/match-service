server.port=9093
spring.kafka.bootstrap-servers=localhost:9092

# Use create-drop ou update
spring.datasource.url=jdbc:mysql://localhost:3307/match_service
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JPA properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true


#Configuração global
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.auto-startup=true
spring.kafka.consumer.cron-trigger=0/5 * * * * *
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.enabled=true
spring.kafka.properties.max.poll.interval.ms=7200000
spring.kafka.properties.max.poll.records=1
spring.kafka.properties.session.timeout.ms=30000
spring.kafka.properties.specific.avro.reader=true


spring.kafka.consumer.NEW_PRODUCT.group-id=new-product
spring.kafka.consumer.NEW_PRODUCT.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.NEW_PRODUCT.value-deserializer=org.apache.kafka.common.serialization.JsonDeserializer

spring.kafka.consumer.NEW_PRICE_ALERT.group-id=new-price-alert
spring.kafka.consumer.NEW_PRICE_ALERT.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.NEW_PRICE_ALERT.value-deserializer=org.apache.kafka.common.serialization.JsonDeserializer


